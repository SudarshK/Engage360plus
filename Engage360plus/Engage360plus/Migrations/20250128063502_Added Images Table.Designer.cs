// <auto-generated />
using System;
using Engage360plus.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Engage360plus.Migrations
{
    [DbContext(typeof(CRMDbContext))]
    [Migration("20250128063502_Added Images Table")]
    partial class AddedImagesTable
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Engage360plus.Models.Domain.Addresses", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("City")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Country")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PostalCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Region")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Addresses");

                    b.HasData(
                        new
                        {
                            Id = new Guid("c2b30590-bc31-42de-a9b5-a3054eba5b41"),
                            City = "Pune0",
                            Country = "India0",
                            PostalCode = "411072",
                            Region = "Pune0"
                        },
                        new
                        {
                            Id = new Guid("c2b30590-bc31-42de-a9b5-a3054eba5b42"),
                            City = "Pune1",
                            Country = "India1",
                            PostalCode = "411072",
                            Region = "Pune1"
                        },
                        new
                        {
                            Id = new Guid("c2b30590-bc31-42de-a9b5-a3054eba5b43"),
                            City = "Pune2",
                            Country = "India2",
                            PostalCode = "411072",
                            Region = "Pune2"
                        },
                        new
                        {
                            Id = new Guid("c2b30590-bc31-42de-a9b5-a3054eba5b44"),
                            City = "Pune0",
                            Country = "India0",
                            PostalCode = "411072",
                            Region = "Pune0"
                        },
                        new
                        {
                            Id = new Guid("c2b30590-bc31-42de-a9b5-a3054eba5b46"),
                            City = "Pune0",
                            Country = "India0",
                            PostalCode = "411072",
                            Region = "Pune0"
                        });
                });

            modelBuilder.Entity("Engage360plus.Models.Domain.CustomerDetails", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("AddressId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CustomerEmail")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CustomerName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("ProductStatusId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("AddressId");

                    b.HasIndex("ProductStatusId");

                    b.ToTable("CustomerDetails");
                });

            modelBuilder.Entity("Engage360plus.Models.Domain.Image", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("FileDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FileExtension")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FileName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FilePath")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("FileSizeInBytes")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.ToTable("Images");
                });

            modelBuilder.Entity("Engage360plus.Models.Domain.ProductStatus", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("ProductStatus");

                    b.HasData(
                        new
                        {
                            Id = new Guid("e89c34df-12c2-4dd1-a4a3-8740380f0f84"),
                            Name = "In Discussion"
                        },
                        new
                        {
                            Id = new Guid("8d2ee75c-1d3f-4e54-9d3d-d9d4577dfedf"),
                            Name = "Paid"
                        },
                        new
                        {
                            Id = new Guid("c2b30590-bc31-42de-a9b5-a3054eba5b45"),
                            Name = "Rejected"
                        });
                });

            modelBuilder.Entity("Engage360plus.Models.Domain.CustomerDetails", b =>
                {
                    b.HasOne("Engage360plus.Models.Domain.Addresses", "Address")
                        .WithMany()
                        .HasForeignKey("AddressId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Engage360plus.Models.Domain.ProductStatus", "ProductStatus")
                        .WithMany()
                        .HasForeignKey("ProductStatusId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Address");

                    b.Navigation("ProductStatus");
                });
#pragma warning restore 612, 618
        }
    }
}
